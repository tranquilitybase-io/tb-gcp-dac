version: '3.1'

services:
  gcp-dac:
    container_name: gcp-dac
    image: gcr.io/tranquility-base-images/tb-gcp-dac:landingzone
#    build:
#      context: .
#      dockerfile: Dockerfile
    ports:
      - 3100:3100
    links:
      - redis
    depends_on:
      - redis
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /credentials.json
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      JENKINS_URL: http://jenkins-svc.cicd.svc.cluster.local
    volumes:
      - .\credentials.json:/credentials.json:ro
      - .\ec-config.yaml:/app/ec-config.yaml:ro

  redis:
    container_name: redis
    image: redis:alpine
    hostname: redis
#      volumes:
#        - redis.conf:/redis.conf
#      command: [ "redis-server", "/redis.conf" ]


  worker:
    image: gcr.io/tranquility-base-images/tb-gcp-dac:landingzone
    build:
      context: .
      dockerfile: Dockerfile
    hostname: worker
#    command:  celery -E -A celery_worker worker --loglevel=info --concurrency=5
    command: ["/bin/bash", "./celery_worker.sh"]
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: /credentials.json
      CELERY_BROKER_URL: redis://redis:6379
      CELERY_RESULT_BACKEND: redis://redis:6379
      # TODO exact URL to be decided
#      JENKINS_URL: http://jenkins-svc.cicd.svc.cluster.local?token=TOKEN
      JENKINS_URL: https://www.jenkins.io/
    volumes:
      - .\credentials.json:/credentials.json:ro
      - .\ec-config.yaml:/app/ec-config.yaml:ro
    links:
      - redis
    depends_on:
      - redis
      - gcp-dac
