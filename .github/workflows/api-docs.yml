# This workflow will install redoc-cli
# and generate the static openapi html file.
# The file is added, commited and pushed to the current branch.

#name: GCP DAC Service - API documentation workflow
name: api-docs

on:
  push:
    branches-ignore: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        repository: tranquilitybase-io/tb-gcp-dac
        path: .
        fetch-depth: 0

    - name: Install redoc-cli and generate API documentation
      shell: bash
      run: |
        ls
        echo "-----"
        cd build_src/gcpdac/api-docs/
        ls
        echo "-----"
        echo "generate API documentation"
        sh generate_docs.sh

    - name: git add, commit and push
      shell: bash
      run: |
        cd build_src/gcpdac/api-docs/
        echo "git add, commit, push"
        sh generate_docs.sh

    - name: Extract current branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: ${{ steps.extract_branch.outputs.branch }}
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
