# This workflow will install Python dependencies, run tests and lint with a single version of Python.
# Testing the building of the container images.
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GCP DAC - CICD Workflow

on:
  pull_request:
    branches: [ master ]

jobs:
  build:
    ### Continuous Integration
    runs-on: ubuntu-latest
    steps:
    - name: Extract current branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    - name: Echo Branch Name
      shell: bash
      run: |
        echo Branch name: ${{ steps.extract_branch.outputs.branch }}
    - uses: actions/checkout@v2
      with:
        repository: tranquilitybase-io/tb-gcp-dac
        path: tb-gcp-dac
        fetch-depth: 0
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build GCP DAC Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/tb-gcp-dac
        docker build -f Dockerfile .

    - name: Build Mock GCP DAC Image
      shell: bash
      run: |
        cd ${GITHUB_WORKSPACE}/tb-gcp-dac
        docker build -f Dockerfile_mock .
