openapi: 3.0.0
info:
  description: TranquilityBase GCP DAC REST API Service
  version: "1.2"
  title: TB GCP DAC

paths:
  /health:
    get:
      operationId: gcpdac.health.check
      tags:
        - health
      summary: health check
      description: health check
      responses:
        '200':
          description: Successful


  /solution_async/:
    post:
      operationId: gcpdac.solution.create_async
      tags:
        - solution
      summary: Create a solution
      description: Create solution in more detail - TODO
      responses:
        '201':
          description: Successfully started a solution creation task
      requestBody:
        $ref: "#/components/requestBodies/solution.solutionDetails"

  "/solution_async/{oid}":
    delete:
      operationId: gcpdac.solution.delete_async
      tags:
        - solution
      summary: delete a solution
      description: delete a solution and its resources
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Successfully started a solution deletion task

  "/solution_async/result/create/{taskid}":
    get:
      operationId: gcpdac.solution.create_solution_result
      tags:
        - solution
      summary: get create solution result
      description:  get create solution result
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully created a solution

  "/solution_async/result/delete/{taskid}":
    get:
      operationId: gcpdac.solution.delete_solution_result
      tags:
        - solution
      summary: get delete solution result
      description:  get delete solution result
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully deleted a solution

  /folder_async/:
    post:
      operationId: gcpdac.folder.create_async
      tags:
        - folder
      summary: Create a folder
      description: Create a folder
      responses:
        '201':
          description: Successfully started a folder creation task
      requestBody:
        $ref: "#/components/requestBodies/folder.folderDetails"

  "/folder_async/{oid}":
    delete:
      operationId: gcpdac.folder.delete_async
      tags:
        - folder
      summary: delete a folder
      description: delete a folder and its resources
      parameters:
        - name: oid
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successfully started a folder deletion task

  "/folder_async/result/create/{taskid}":
    get:
      operationId: gcpdac.folder.create_folder_result
      tags:
        - folder
      summary: get create folder result
      description:  get create folder result
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully created a folder

  "/folder_async/result/delete/{taskid}":
    get:
      operationId: gcpdac.folder.delete_folder_result
      tags:
        - folder
      summary: get delete folder result
      description:  get delete folder result
      parameters:
        - name: taskid
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Successfully deleted a folder
servers:
  - url: /api
components:
  requestBodies:
    solution.solutionDetails:
      content:
        application/json:
          schema:
            x-body-name: solutionDetails
            $ref: "#/components/schemas/Solution"
    folder.folderDetails:
      content:
        application/json:
          schema:
            x-body-name: folderDetails
            $ref: "#/components/schemas/Folder"
  schemas:
    Solution:
      type: object
      properties:
        id:
          type: integer
          description: the solution id
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        businessUnit:
          type: string
          description: businessUnit
        costCentre:
          type: string
          description: costCentre
        ci:
          type: string
          description: ci
        cd:
          type: string
          description: cd
        deploymentFolderId:
          type: string
          description: deployment folder id
        sourceControl:
          type: string
          description: sourceControl
        environments:
          type: array
          description: environments
          items:
            properties:
              environment:
                type: string
                description: environment
        active:
          type: boolean
          description: active
        favourite:
          type: boolean
          description: favourite
        teams:
          type: integer
          description: teams
        lastUpdated:
          type: string
          description: "UTC/CUT last updated datetime stamp see: https://github.com/tranquilitybase-io/tb-houston-service/wiki/UTC-Timestamp"
    Folder:
      type: object
      properties:
        folderName:
          type: string
          description: folder name
        parentFolderId:
          type: string
          description: parent folder id
      example:
        folder: 'ABC'
        parentFolderId: '236823'

